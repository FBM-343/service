pipeline {
    agent any
    environment {
        DOCKER_PASSWORD = credentials("docker_password")
        DOCKER_USERNAME = credentials("docker_username")
        GITHUB_TOKEN = credentials("github_token")
    }

    stages {
        stage('Build & Test') {
            steps {
                sh './gradlew clean build'
            }
        }

        stage('Tag image') {
            steps {
                script {
                    sh([script: 'git fetch --tag', returnStdout: true]).trim()
                    env.MAJOR_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 1', returnStdout: true]).trim()
                    env.MINOR_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 2', returnStdout: true]).trim()
                    env.PATCH_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 3', returnStdout: true]).trim()
                    env.IMAGE_TAG = "${env.MAJOR_VERSION}.\$((${env.MINOR_VERSION} + 1)).${env.PATCH_VERSION}"
}
                sh "docker build -t $DOCKER_USERNAME/hello-img:${env.IMAGE_TAG} ."
            }
        }

        stage('Push image') {
            steps {
                script {
                    sh "echo $DOCKER_PASSWORD | docker login docker.io -u $DOCKER_USERNAME --password-stdin"
                    sh "docker push $DOCKER_USERNAME/hello-img:${env.IMAGE_TAG}"
                }
            }
        }

        stage('Push tag') {
            steps {
                script {
                    sh "git tag ${env.IMAGE_TAG}"
                    sh "git push https://$GITHUB_TOKEN@github.com/FBM-343/service.git ${env.IMAGE_TAG}"
                }
            }
        }

        stage('Deploy') {
            steps{
                sh "IMAGE_TAG=${env.IMAGE_TAG} DOCKER_USERNAME=${DOCKER_USERNAME} docker compose up -d hello mongo"
            }
        }

        stage('E2E Test') {
            steps {
                sh './gradlew testE2E'
            }
        }
    }
}
